class Solution {
    // Function to return a list containing the DFS traversal of the graph.
   
   public static  void dfs(boolean visited[],int curr,ArrayList<ArrayList<Integer>>adj,ArrayList<Integer>li)
   {
       visited[curr]=true;
       li.add(curr);
       for(int element:adj.get(curr)){
           if(!visited[element]){
                dfs(visited,element,adj,li);
           }
       }
       
       
   }
   
    public ArrayList<Integer> dfsOfGraph(int V, ArrayList<ArrayList<Integer>> adj) {
        boolean visited[]=new boolean[adj.size()];
        int curr=0;
        ArrayList<Integer>li=new ArrayList<>();
        dfs(visited,curr,adj,li);
        return li;
    }
}
